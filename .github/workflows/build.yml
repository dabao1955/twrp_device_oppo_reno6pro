name: build recovery
on:
  push:
    branches: ["oss-T/twrp-12.1"]
  pull_request:
    branches: ["oss-T-dev/twrp-12.1"]
jobs:
  init:
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
    - name: "Checkout Repo"
      uses: actions/checkout@v3
    
    - name: Display Run Parameters
      run: |
        echo "::group::User Environment Variables"
        echo "Manifest URL: https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp"
        echo "Manifest Branch: twrp-12.1"
        echo "Device Tree URL: https://github.com/dabao1955/twrp_device_oppo_reno6pro"
        echo "Device Tree Branch: oss-T/twrp-12.1"
        echo "Device Path: device/oppo/pepm00"
        echo "Device Name: omni_pepm00"
        echo "Makefile Name: omni_pepm00"
        echo "Build Target: recovery.img"
        echo "::endgroup::"

  build-recovery:
    needs: init
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
    # Cleanup The Actions Workspace Using Custom Composite Run Actions
    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main
      # That's it! Now use your normal steps

    - name: Prepare the environment
      run: |
        sudo apt update && df -h && echo && sleep 15s
        sudo apt -y upgrade
        sudo apt -y install gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib libc6-dev lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libwxgtk3.0-gtk3-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev libncurses5 python
        sudo apt -y purge nodejs npm chromium-browser firefox*

    - name: Install OpenJDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: Setup ccache

      uses: hendrikmuhs/ccache-action@main
      with: 
        max-size: 4G
         
    - name: Install repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo ln -sf ~/bin/repo /usr/bin/repo
      
    - name: Initialize repo
      run: |
        mkdir workspace
        cd workspace
        echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
        git config --global user.name "Nico170420"
        git config --global user.email "b170420nc@gmail.com"
        repo init --depth=1 -u ${{ github.event.inputs.MANIFEST_URL }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
      id: pwd
          
    - name: Repo Sync
      run: |
        repo sync -j$(nproc --all) --force-sync
      working-directory: workspace
      
    - name: Clone device tree
      run: |
        git clone ${{ github.event.inputs.DEVICE_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Sync Device Dependencies
      run: |
        bash ${GITHUB_WORKSPACE}/.github/scripts/convert.sh ${{ github.event.inputs.DEVICE_PATH }}/${{ steps.buildtree.outputs.value }}.dependencies
        repo sync -j$(nproc --all)
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}
      continue-on-error: true

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12

    - name: Building recovery
      run: |
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        lunch ${{ github.event.inputs.MAKEFILE_NAME }}-eng && make clean && make ${{ github.event.inputs.BUILD_TARGET }}image -j$(nproc --all)
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Upload recovery.img to Artifact
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v3
      with:
        files: workspace/out/target/product/pepm00/recovery.img
        
  
    
